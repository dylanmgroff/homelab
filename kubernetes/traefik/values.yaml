globalArguments:
  - "--global.sendanonymoususage=false"
  - "--global.checknewversion=false"

additionalArguments:
  - "--serversTransport.insecureSkipVerify=true"
  - "--log.level=INFO"

deployment:
  enabled: true
  replicas: 3
  annotations: {}
  podAnnotations: {}
  additionalContainers: []
  initContainers: []

nodeSelector: 
  worker: "true"

ports:
  web:
    redirections:
      entryPoint:
        to: websecure
        scheme: https
        permanent: true

ingressRoute:
  dashboard:
    enabled: true
    matchRule: Host(`traefik.manly.dylangroff.com`)
    entryPoints: ["websecure"]
    middlewares:
      - name: traefik-dashboard

ingressClass:
  name: traefik
providers:
  kubernetesCRD:
    ingressClass: traefik
  kubernetesIngress:
    ingressClass: traefik

extraObjects:
  - apiVersion: traefik.io/v1alpha1
    kind: Middleware
    metadata:
      name: traefik-dashboard
    spec:
      basicAuth:
        secret: traefik-auth

tlsStore:
  default:
    defaultCertificate:
      secretName: dylangroff-tls

rbac:
  enabled: true

service:
  enabled: true
  type: LoadBalancer
  annotations: {}
  labels: {}
  spec:
    loadBalancerIP: 10.9.50.65
  loadBalancerSourceRanges: []
  externalIPs: []